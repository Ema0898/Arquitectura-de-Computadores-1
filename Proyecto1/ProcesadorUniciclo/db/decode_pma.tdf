--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=20 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:09:SJ cbx_lpm_add_sub 2018:09:12:13:04:09:SJ cbx_lpm_compare 2018:09:12:13:04:09:SJ cbx_lpm_decode 2018:09:12:13:04:09:SJ cbx_mgl 2018:09:12:14:15:07:SJ cbx_nadder 2018:09:12:13:04:09:SJ cbx_stratix 2018:09:12:13:04:09:SJ cbx_stratixii 2018:09:12:13:04:09:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_pma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[19..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[19..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1058w[2..0]	: WIRE;
	w_anode1071w[3..0]	: WIRE;
	w_anode1088w[3..0]	: WIRE;
	w_anode1098w[3..0]	: WIRE;
	w_anode1108w[3..0]	: WIRE;
	w_anode1118w[3..0]	: WIRE;
	w_anode1128w[3..0]	: WIRE;
	w_anode1138w[3..0]	: WIRE;
	w_anode1148w[3..0]	: WIRE;
	w_anode1160w[2..0]	: WIRE;
	w_anode1169w[3..0]	: WIRE;
	w_anode1180w[3..0]	: WIRE;
	w_anode1190w[3..0]	: WIRE;
	w_anode1200w[3..0]	: WIRE;
	w_anode1210w[3..0]	: WIRE;
	w_anode1220w[3..0]	: WIRE;
	w_anode1230w[3..0]	: WIRE;
	w_anode1240w[3..0]	: WIRE;
	w_anode1251w[2..0]	: WIRE;
	w_anode1260w[3..0]	: WIRE;
	w_anode1271w[3..0]	: WIRE;
	w_anode1281w[3..0]	: WIRE;
	w_anode1291w[3..0]	: WIRE;
	w_anode1301w[3..0]	: WIRE;
	w_anode1311w[3..0]	: WIRE;
	w_anode1321w[3..0]	: WIRE;
	w_anode1331w[3..0]	: WIRE;
	w_anode1342w[2..0]	: WIRE;
	w_anode1351w[3..0]	: WIRE;
	w_anode1362w[3..0]	: WIRE;
	w_anode1372w[3..0]	: WIRE;
	w_anode1382w[3..0]	: WIRE;
	w_anode1392w[3..0]	: WIRE;
	w_anode1402w[3..0]	: WIRE;
	w_anode1412w[3..0]	: WIRE;
	w_anode1422w[3..0]	: WIRE;
	w_data1056w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[19..0] = eq_wire[19..0];
	eq_wire[] = ( ( w_anode1422w[3..3], w_anode1412w[3..3], w_anode1402w[3..3], w_anode1392w[3..3], w_anode1382w[3..3], w_anode1372w[3..3], w_anode1362w[3..3], w_anode1351w[3..3]), ( w_anode1331w[3..3], w_anode1321w[3..3], w_anode1311w[3..3], w_anode1301w[3..3], w_anode1291w[3..3], w_anode1281w[3..3], w_anode1271w[3..3], w_anode1260w[3..3]), ( w_anode1240w[3..3], w_anode1230w[3..3], w_anode1220w[3..3], w_anode1210w[3..3], w_anode1200w[3..3], w_anode1190w[3..3], w_anode1180w[3..3], w_anode1169w[3..3]), ( w_anode1148w[3..3], w_anode1138w[3..3], w_anode1128w[3..3], w_anode1118w[3..3], w_anode1108w[3..3], w_anode1098w[3..3], w_anode1088w[3..3], w_anode1071w[3..3]));
	w_anode1058w[] = ( (w_anode1058w[1..1] & (! data_wire[4..4])), (w_anode1058w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1071w[] = ( (w_anode1071w[2..2] & (! w_data1056w[2..2])), (w_anode1071w[1..1] & (! w_data1056w[1..1])), (w_anode1071w[0..0] & (! w_data1056w[0..0])), w_anode1058w[2..2]);
	w_anode1088w[] = ( (w_anode1088w[2..2] & (! w_data1056w[2..2])), (w_anode1088w[1..1] & (! w_data1056w[1..1])), (w_anode1088w[0..0] & w_data1056w[0..0]), w_anode1058w[2..2]);
	w_anode1098w[] = ( (w_anode1098w[2..2] & (! w_data1056w[2..2])), (w_anode1098w[1..1] & w_data1056w[1..1]), (w_anode1098w[0..0] & (! w_data1056w[0..0])), w_anode1058w[2..2]);
	w_anode1108w[] = ( (w_anode1108w[2..2] & (! w_data1056w[2..2])), (w_anode1108w[1..1] & w_data1056w[1..1]), (w_anode1108w[0..0] & w_data1056w[0..0]), w_anode1058w[2..2]);
	w_anode1118w[] = ( (w_anode1118w[2..2] & w_data1056w[2..2]), (w_anode1118w[1..1] & (! w_data1056w[1..1])), (w_anode1118w[0..0] & (! w_data1056w[0..0])), w_anode1058w[2..2]);
	w_anode1128w[] = ( (w_anode1128w[2..2] & w_data1056w[2..2]), (w_anode1128w[1..1] & (! w_data1056w[1..1])), (w_anode1128w[0..0] & w_data1056w[0..0]), w_anode1058w[2..2]);
	w_anode1138w[] = ( (w_anode1138w[2..2] & w_data1056w[2..2]), (w_anode1138w[1..1] & w_data1056w[1..1]), (w_anode1138w[0..0] & (! w_data1056w[0..0])), w_anode1058w[2..2]);
	w_anode1148w[] = ( (w_anode1148w[2..2] & w_data1056w[2..2]), (w_anode1148w[1..1] & w_data1056w[1..1]), (w_anode1148w[0..0] & w_data1056w[0..0]), w_anode1058w[2..2]);
	w_anode1160w[] = ( (w_anode1160w[1..1] & (! data_wire[4..4])), (w_anode1160w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1169w[] = ( (w_anode1169w[2..2] & (! w_data1056w[2..2])), (w_anode1169w[1..1] & (! w_data1056w[1..1])), (w_anode1169w[0..0] & (! w_data1056w[0..0])), w_anode1160w[2..2]);
	w_anode1180w[] = ( (w_anode1180w[2..2] & (! w_data1056w[2..2])), (w_anode1180w[1..1] & (! w_data1056w[1..1])), (w_anode1180w[0..0] & w_data1056w[0..0]), w_anode1160w[2..2]);
	w_anode1190w[] = ( (w_anode1190w[2..2] & (! w_data1056w[2..2])), (w_anode1190w[1..1] & w_data1056w[1..1]), (w_anode1190w[0..0] & (! w_data1056w[0..0])), w_anode1160w[2..2]);
	w_anode1200w[] = ( (w_anode1200w[2..2] & (! w_data1056w[2..2])), (w_anode1200w[1..1] & w_data1056w[1..1]), (w_anode1200w[0..0] & w_data1056w[0..0]), w_anode1160w[2..2]);
	w_anode1210w[] = ( (w_anode1210w[2..2] & w_data1056w[2..2]), (w_anode1210w[1..1] & (! w_data1056w[1..1])), (w_anode1210w[0..0] & (! w_data1056w[0..0])), w_anode1160w[2..2]);
	w_anode1220w[] = ( (w_anode1220w[2..2] & w_data1056w[2..2]), (w_anode1220w[1..1] & (! w_data1056w[1..1])), (w_anode1220w[0..0] & w_data1056w[0..0]), w_anode1160w[2..2]);
	w_anode1230w[] = ( (w_anode1230w[2..2] & w_data1056w[2..2]), (w_anode1230w[1..1] & w_data1056w[1..1]), (w_anode1230w[0..0] & (! w_data1056w[0..0])), w_anode1160w[2..2]);
	w_anode1240w[] = ( (w_anode1240w[2..2] & w_data1056w[2..2]), (w_anode1240w[1..1] & w_data1056w[1..1]), (w_anode1240w[0..0] & w_data1056w[0..0]), w_anode1160w[2..2]);
	w_anode1251w[] = ( (w_anode1251w[1..1] & data_wire[4..4]), (w_anode1251w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1260w[] = ( (w_anode1260w[2..2] & (! w_data1056w[2..2])), (w_anode1260w[1..1] & (! w_data1056w[1..1])), (w_anode1260w[0..0] & (! w_data1056w[0..0])), w_anode1251w[2..2]);
	w_anode1271w[] = ( (w_anode1271w[2..2] & (! w_data1056w[2..2])), (w_anode1271w[1..1] & (! w_data1056w[1..1])), (w_anode1271w[0..0] & w_data1056w[0..0]), w_anode1251w[2..2]);
	w_anode1281w[] = ( (w_anode1281w[2..2] & (! w_data1056w[2..2])), (w_anode1281w[1..1] & w_data1056w[1..1]), (w_anode1281w[0..0] & (! w_data1056w[0..0])), w_anode1251w[2..2]);
	w_anode1291w[] = ( (w_anode1291w[2..2] & (! w_data1056w[2..2])), (w_anode1291w[1..1] & w_data1056w[1..1]), (w_anode1291w[0..0] & w_data1056w[0..0]), w_anode1251w[2..2]);
	w_anode1301w[] = ( (w_anode1301w[2..2] & w_data1056w[2..2]), (w_anode1301w[1..1] & (! w_data1056w[1..1])), (w_anode1301w[0..0] & (! w_data1056w[0..0])), w_anode1251w[2..2]);
	w_anode1311w[] = ( (w_anode1311w[2..2] & w_data1056w[2..2]), (w_anode1311w[1..1] & (! w_data1056w[1..1])), (w_anode1311w[0..0] & w_data1056w[0..0]), w_anode1251w[2..2]);
	w_anode1321w[] = ( (w_anode1321w[2..2] & w_data1056w[2..2]), (w_anode1321w[1..1] & w_data1056w[1..1]), (w_anode1321w[0..0] & (! w_data1056w[0..0])), w_anode1251w[2..2]);
	w_anode1331w[] = ( (w_anode1331w[2..2] & w_data1056w[2..2]), (w_anode1331w[1..1] & w_data1056w[1..1]), (w_anode1331w[0..0] & w_data1056w[0..0]), w_anode1251w[2..2]);
	w_anode1342w[] = ( (w_anode1342w[1..1] & data_wire[4..4]), (w_anode1342w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1351w[] = ( (w_anode1351w[2..2] & (! w_data1056w[2..2])), (w_anode1351w[1..1] & (! w_data1056w[1..1])), (w_anode1351w[0..0] & (! w_data1056w[0..0])), w_anode1342w[2..2]);
	w_anode1362w[] = ( (w_anode1362w[2..2] & (! w_data1056w[2..2])), (w_anode1362w[1..1] & (! w_data1056w[1..1])), (w_anode1362w[0..0] & w_data1056w[0..0]), w_anode1342w[2..2]);
	w_anode1372w[] = ( (w_anode1372w[2..2] & (! w_data1056w[2..2])), (w_anode1372w[1..1] & w_data1056w[1..1]), (w_anode1372w[0..0] & (! w_data1056w[0..0])), w_anode1342w[2..2]);
	w_anode1382w[] = ( (w_anode1382w[2..2] & (! w_data1056w[2..2])), (w_anode1382w[1..1] & w_data1056w[1..1]), (w_anode1382w[0..0] & w_data1056w[0..0]), w_anode1342w[2..2]);
	w_anode1392w[] = ( (w_anode1392w[2..2] & w_data1056w[2..2]), (w_anode1392w[1..1] & (! w_data1056w[1..1])), (w_anode1392w[0..0] & (! w_data1056w[0..0])), w_anode1342w[2..2]);
	w_anode1402w[] = ( (w_anode1402w[2..2] & w_data1056w[2..2]), (w_anode1402w[1..1] & (! w_data1056w[1..1])), (w_anode1402w[0..0] & w_data1056w[0..0]), w_anode1342w[2..2]);
	w_anode1412w[] = ( (w_anode1412w[2..2] & w_data1056w[2..2]), (w_anode1412w[1..1] & w_data1056w[1..1]), (w_anode1412w[0..0] & (! w_data1056w[0..0])), w_anode1342w[2..2]);
	w_anode1422w[] = ( (w_anode1422w[2..2] & w_data1056w[2..2]), (w_anode1422w[1..1] & w_data1056w[1..1]), (w_anode1422w[0..0] & w_data1056w[0..0]), w_anode1342w[2..2]);
	w_data1056w[2..0] = data_wire[2..0];
END;
--VALID FILE
